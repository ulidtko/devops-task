
#-- https://circleci.com/docs/2.0/configuration-reference/ --#

version: 2

globals: &globals
  docker:
    - image: fpco/stack-build-small:lts-14.5
    - image: docker:19.03-git

  working_directory: /opt/CI

stack_opts: &STACKOPTS >
  -j1 --time-in-log --terminal-width=120 --color=always

jobs:
  docker-warmup:
    <<: *globals

    steps:
      - setup_remote_docker

      - restore_cache:
          keys:
            - cacheV0-{{ .Branch }}
          paths:
            - /docker-cache/appimg.tar

      - run:
          name: Load Docker build cache
          command: |
            docker load < /docker-cache/appimg.tar || :

  docker-shutdown:
    <<: *globals

    steps:
      - run:
          name: Save Docker build cache
          command: |
            docker save > /docker-cache/appimg.tar

      - save_cache:
          key: cacheV0-{{ .Branch }}-{{ epoch }}
          paths:
            - /docker-cache/appimg.tar

  compile-and-test:
    <<: *globals

    steps:
      - checkout

      - run:
          name: Compiling (stack build)
          command: >
            stack -j1 --time-in-log --terminal-width=120 --color=always
                build --test --no-run-tests --system-ghc

      - run:
          name: Running unit-tests
          command: |
            stack test

      - run:
          name: Making release binary
          command: >
            stack install
                  --system-ghc
                  --local-bin-path stack-OUT

      - persist_to_workspace:
          root: .
          paths:
            - stack-OUT

  build-release-image:
    <<: *globals

    steps:
      - attach_workspace:
          at: /opt/CI/stack-OUT

      - run:
          name: Building release image
          command: >
            docker build
                  -f .circleci/app-release.dockerfile
                  --cache-from appimg
                  --tag devops-api:latest
                  .

#-- Ref: https://circleci.com/docs/2.0/workflows/ --#

workflows:
  version: 2

  pipeline-main:
    jobs:
      - docker-warmup

      - compile-and-test

      - build-release-image:
          requires:
            - compile-and-test

      - docker-shutdown:
          requires:
            - build-release-image

    #filters:
    #  branches:
    #    - master
    #    - develop
